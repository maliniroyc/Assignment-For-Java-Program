package package3;

import java.util.HashMap;

public class LongestSubstringWithoutDup {

	public static String findLongestSubstring(String input) {
		int n = input.length();
        int start = 0;
        int maxLength = 0;
        HashMap<Character, Integer> charIndexMap = new HashMap<>();

        for (int end = 0; end < n; end++) {
            char currentChar = input.charAt(end);

            if (charIndexMap.containsKey(currentChar)) {
                start = Math.max(charIndexMap.get(currentChar) + 1, start);
            }

            if (end - start + 1 > maxLength) {
                maxLength = end - start + 1;
            }

            charIndexMap.put(currentChar, end);
        }
        
		return input.substring(start, start + maxLength);
		
	}
	public static void main(String[] args) {
        String input = "Welcome to Power Router";
        String longestSubstring = findLongestSubstring(input);
        System.out.println("Input: " + input);
        System.out.println("Output: " + longestSubstring);
}}
        
	
